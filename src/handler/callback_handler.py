from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, Message, InputMediaPhoto, InputMediaVideo
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.filters.callback_data import CallbackData

import keybord.inline_keybord as in_key
import keybord.reply_keybord as re_key


router_callback = Router()

class CallbackDataUserId(CallbackData, prefix = "user"):
    user_id: int
    resume_id: int
    index: str

class Anketa_arend(StatesGroup):
    address = State()
    name_user = State()
    description = State()
    praice = State()
    image_1 = State()
    image_2 = State()
    image_3 = State()
    image_4 = State()
    image_5 = State()
    video_1 = State()
class Anketa_arend_pull(StatesGroup):
    address = State()
    name_user = State()
    description = State()
    username = State()
    praice = State()
    image_1 = State()
    image_2 = State()

@router_callback.callback_query(F.data == 'anketa_arenda')
async def proverka_pod(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer('–•–æ—Ä–æ—à–æ, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å—Å –≤–∞—à–µ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è \n\n\
–ü—Ä–∏–º–µ—Ä: –≥. –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫, —Ä-–æ–Ω –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π, —É–ª. –ì–µ—Ä–æ–µ–≤ –•–∞—Å–∞–Ω–∞, –¥14')
    await state.set_state(Anketa_arend.address)

@router_callback.message(Anketa_arend.address)
async def proverka_pod(message: Message, state: FSMContext):
    await message.answer('–ê–¥—Ä–µ—Å –∑–∞–ø–∏—Å–∞–ª–∏, —Ç–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è\n\n\
–ü—Ä–∏–º–µ—Ä: –î–º–∏—Ç—Ä–∏–π', reply_markup = re_key.key_1)
    await state.update_data(address = message.text)
    await state.set_state(Anketa_arend.name_user)

@router_callback.message(Anketa_arend.name_user)
async def proverka_pod(message: Message, state: FSMContext):
    if message.text == '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∏–∫ üìù':
        await message.answer('–í–∞—à–µ –∏–º—è –∑–∞–ø–∏—Å–∞–Ω–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫ –æ–±—å—è–≤–ª–µ–Ω–∏—é\n\n\
–ü—Ä–∏–º–µ—Ä: –ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å–¥–∞—ë—Ç—å—Å—è –≤ —Ö–æ—Ä–æ—à–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, —Å–≤–µ–∂–∏–π —Ä–µ–º–æ–Ω—Ç, –ø—Ä–∏—è—Ç–Ω—ã–µ —Å–æ—Å–µ–¥–∏')
        await state.update_data(name_user = message.from_user.username)

    if message.text != '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∏–∫ üìù': 
        await message.answer('–í–∞—à–µ –∏–º—è –∑–∞–ø–∏—Å–∞–Ω–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫ –æ–±—å—è–≤–ª–µ–Ω–∏—é\n\n\
–ü—Ä–∏–º–µ—Ä: –ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å–¥–∞—ë—Ç—å—Å—è –≤ —Ö–æ—Ä–æ—à–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, —Å–≤–µ–∂–∏–π —Ä–µ–º–æ–Ω—Ç, –ø—Ä–∏—è—Ç–Ω—ã–µ —Å–æ—Å–µ–¥–∏')
        await state.update_data(name_user = message.from_user.username)

    await state.set_state(Anketa_arend.description)

@router_callback.message(Anketa_arend.description)
async def proverka_pod(message: Message, state: FSMContext):
    await message.answer('–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ, —Ç–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É\n\n\
–ü—Ä–∏–º–µ—Ä: 55.000—Ä/–º–µ—Å –∏–ª–∏ 15.000—Ä/–º2 –∏–ª–∏ 15.000.000—Ä (–µ—Å–ª–∏ —Ü–µ–Ω–∞ –∑–∞–ø–æ–∫—É–ø–∫—É –¥–æ–º–∞/–∫–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é)')
    await state.update_data(description = message.text)
    await state.set_state(Anketa_arend.praice)

@router_callback.message(Anketa_arend.praice)
async def proverka_pod(message: Message, state: FSMContext):
    await message.answer('–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å 5 —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è –∏ –æ–¥–Ω–æ –≤–∏–¥–µ–æ\n\n\
–§–æ—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å –ø–æ –æ–¥–Ω–æ–º—É, –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ')
    await state.update_data(praice = message.text)
    await state.set_state(Anketa_arend.image_1)


@router_callback.message(Anketa_arend.image_1)
async def proverka_pod(message: Message, state: FSMContext):
    await message.answer('–ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ')
    await state.update_data(image_1 = message.photo[0].file_id)
    await state.set_state(Anketa_arend.image_2)

@router_callback.message(Anketa_arend.image_2)
async def proverka_pod(message: Message, state: FSMContext):
    await message.answer('–í—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ')
    await state.update_data(image_2 = message.photo[0].file_id)
    await state.set_state(Anketa_arend.image_3)

@router_callback.message(Anketa_arend.image_3)
async def proverka_pod(message: Message, state: FSMContext):
    await message.answer('–¢—Ä–µ—Ç—å–µ —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ')
    await state.update_data(image_3 = message.photo[0].file_id)
    await state.set_state(Anketa_arend.image_4)

@router_callback.message(Anketa_arend.image_4)
async def proverka_pod(message: Message, state: FSMContext):
    await message.answer('–ß–µ—Ç–≤—ë—Ä—Ç–æ–µ —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ')
    await state.update_data(image_4 = message.photo[0].file_id)
    await state.set_state(Anketa_arend.image_5)

@router_callback.message(Anketa_arend.image_5)
async def proverka_pod(message: Message, state: FSMContext):
    await message.answer('–ü—è—Ç–æ–µ —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ, —Ç–µ–ø–µ—Ä—å –ø—Ä–µ—à–ª–∏—Ç–µ –≤–∏–¥–µ–æ')
    await state.update_data(image_5 = message.photo[0].file_id)
    await state.set_state(Anketa_arend.video_1)

@router_callback.message(Anketa_arend.video_1)
async def proverka_pod(message: Message, state: FSMContext):
    await state.update_data(video_1 = message.video.file_id)
    result = await state.get_data()

    media_list = [
    InputMediaPhoto(type = 'photo', media = result['image_1']),
    InputMediaPhoto(type = 'photo', media = result['image_2']),
    InputMediaPhoto(type = 'photo', media = result['image_3']),
    InputMediaPhoto(type = 'photo', media = result['image_4']),
    InputMediaPhoto(type = 'photo', media = result['image_5']),
    InputMediaVideo(type = 'video', media = result['video_1'], 
                    caption = f'''‚ú®<b><i>–ù–æ–≤–æ–µ –æ–±—å—è–≤–ª–µ–Ω–∏–µ</i></b>‚ú®\nüìç<b>–ê–¥—Ä–µ—Å: </b>{result['address']}\nüìç<b>–ü—Ä–æ–¥–∞–≤–µ—Ü: </b><a href = "https://t.me/{message.from_user.username}">{result['name_user']}</a>\nüìç<b>–°—Ç–æ–∏–º–æ—Å—Ç—å: </b>{result['praice']}\nüìç<b>–û–ø–∏—Å–∞–Ω–∏–µ: </b>{result['description']}''',
                    parse_mode = 'HTML')
                    ]
    await message.answer_media_group(media = media_list)
    await message.answer('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—å—è–≤–ª–µ–Ω–∏–µ ?', reply_markup = in_key.keybord_anketa_post)

@router_callback.callback_query(F.data == 'post')
async def proverka_pod(callback: CallbackQuery, state: FSMContext, bot = Bot):
    await callback.message.delete()
    result = await state.get_data()

    media_list = [
    InputMediaPhoto(type = 'photo', media = result['image_1']),
    InputMediaPhoto(type = 'photo', media = result['image_2']),
    InputMediaPhoto(type = 'photo', media = result['image_3']),
    InputMediaPhoto(type = 'photo', media = result['image_4']),
    InputMediaPhoto(type = 'photo', media = result['image_5']),
    InputMediaVideo(type = 'video', media = result['video_1'], 
                    caption = f'''‚ú®<b><i>–ù–æ–≤–æ–µ –æ–±—å—è–≤–ª–µ–Ω–∏–µ</i></b>‚ú®\nüìç<b>–ê–¥—Ä–µ—Å: </b>{result['address']}\nüìç<b>–ü—Ä–æ–¥–∞–≤–µ—Ü: </b><a href = "https://t.me/{callback.from_user.username}">{result['name_user']}</a>\nüìç<b>–°—Ç–æ–∏–º–æ—Å—Ç—å: </b>{result['praice']}\nüìç<b>–û–ø–∏—Å–∞–Ω–∏–µ: </b>{result['description']}''',
                    parse_mode = 'HTML')
                    ]
    await bot.send_media_group(chat_id = -1002185953665, media = media_list, reply_to_message_id = 19)
    await state.clear()

    await callback.message.answer('–í–∞—à–µ –æ–±—å—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ‚úÖ')

@router_callback.callback_query(F.data == 'no_post')
async def proverka_pod(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.delete()


@router_callback.callback_query(F.data == 'anketa_claim')
async def proverka_pod(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer('–•–æ—Ä–æ—à–æ, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —Ä–∞–π–æ–Ω–∞ –ø–æ–∏—Å–∫–∞\n\n\
–ü—Ä–∏–º–µ—Ä: –≥. –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫, —Ä-–æ–Ω –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π')
    await state.set_state(Anketa_arend_pull.address)

@router_callback.message(Anketa_arend_pull.address)
async def proverka_pod(message: Message, state: FSMContext):
    await state.update_data(address = message.from_user.username)
    await message.answer('–ê–¥—Ä–µ—Å –∑–∞–ø–∏—Å–∞–ª–∏, —Ç–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è\n\n\
–ü—Ä–∏–º–µ—Ä: –î–º–∏—Ç—Ä–∏–π', reply_markup = re_key.key_1)

    await state.set_state(Anketa_arend_pull.name_user)

@router_callback.message(Anketa_arend_pull.name_user)
async def proverka_pod(message: Message, state: FSMContext):
    if message.text == '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∏–∫ üìù':
        await message.answer('–í–∞—à–µ –∏–º—è –∑–∞–ø–∏—Å–∞–Ω–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫ –æ–±—å—è–≤–ª–µ–Ω–∏—é\n\n\
–ü—Ä–∏–º–µ—Ä: –ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å–¥–∞—ë—Ç—å—Å—è –≤ —Ö–æ—Ä–æ—à–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, —Å–≤–µ–∂–∏–π —Ä–µ–º–æ–Ω—Ç, –ø—Ä–∏—è—Ç–Ω—ã–µ —Å–æ—Å–µ–¥–∏')
        await state.update_data(name_user = message.from_user.username)

    if message.text != '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∏–∫ üìù': 
        await message.answer('–í–∞—à–µ –∏–º—è –∑–∞–ø–∏—Å–∞–Ω–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫ –æ–±—å—è–≤–ª–µ–Ω–∏—é\n\n\
–ü—Ä–∏–º–µ—Ä: –ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å–¥–∞—ë—Ç—å—Å—è –≤ —Ö–æ—Ä–æ—à–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, —Å–≤–µ–∂–∏–π —Ä–µ–º–æ–Ω—Ç, –ø—Ä–∏—è—Ç–Ω—ã–µ —Å–æ—Å–µ–¥–∏')
        await state.update_data(name_user = message.from_user.username)

    await state.set_state(Anketa_arend_pull.description)

@router_callback.message(Anketa_arend_pull.description)
async def proverka_pod(message: Message, state: FSMContext):
    await message.answer('–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ, —Ç–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Ü–µ–Ω—É\n\n\
–ü—Ä–∏–º–µ—Ä: 55.000—Ä/–º–µ—Å –∏–ª–∏ 15.000—Ä/–º2')
    await state.update_data(description = message.text)
    await state.set_state(Anketa_arend_pull.praice)

@router_callback.message(Anketa_arend_pull.praice)
async def proverka_pod(message: Message, state: FSMContext):
    await message.answer('–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å 2 –≤–∞—à–∏—Ö —Ñ–æ—Ç–æ \n\n\
–§–æ—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å –ø–æ –æ–¥–Ω–æ–º—É, –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ')
    await state.update_data(praice = message.text)
    await state.set_state(Anketa_arend_pull.image_1)


@router_callback.message(Anketa_arend_pull.image_1)
async def proverka_pod(message: Message, state: FSMContext):
    await message.answer('–ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ')
    await state.update_data(image_1 = message.photo[0].file_id)
    await state.set_state(Anketa_arend_pull.image_2)

@router_callback.message(Anketa_arend_pull.image_2)
async def proverka_pod(message: Message, state: FSMContext):
    await state.update_data(image_2 = message.photo[0].file_id)
    result = await state.get_data()

    media_list = [
    InputMediaPhoto(type = 'photo', media = result['image_1']),
    InputMediaPhoto(type = 'photo', media = result['image_2'], 
                    caption = f'''‚ú®<b><i>–ù–æ–≤—ã–π –∏—Å–∫–∞—Ç–µ–ª—å</i></b>‚ú®\nüìç<b>–ê–¥—Ä–µ—Å –ø–æ–∏—Å–∫–∞: </b>{result['address']}\nüìç<b>–ò—Å–∫–∞—Ç–µ–ª—å: </b><a href = "https://t.me/{message.from_user.username}">{result['name_user']}</a>\nüìç<b>–ñ–µ–ª–∞–µ–º–∞—è —Ü–µ–Ω–∞: </b>{result['praice']}\nüìç<b>–û–ø–∏—Å–∞–Ω–∏–µ: </b>{result['description']}''',
                    parse_mode = 'HTML')
                    ]
    await message.answer_media_group(media = media_list)
    await message.answer('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—å—è–≤–ª–µ–Ω–∏–µ ?', reply_markup = in_key.keybord_anketa_post_pull)

@router_callback.callback_query(F.data == 'post_pull')
async def proverka_pod(callback: CallbackQuery, state: FSMContext, bot = Bot):
    await callback.message.delete()
    result = await state.get_data()

    media_list = [
    InputMediaPhoto(type = 'photo', media = result['image_1']),
    InputMediaPhoto(type = 'photo', media = result['image_2'], 
                    caption = f'''‚ú®<b><i>–ù–æ–≤—ã–π –∏—Å–∫–∞—Ç–µ–ª—å</i></b>‚ú®\nüìç<b>–ê–¥—Ä–µ—Å –ø–æ–∏—Å–∫–∞: </b>{result['address']}\nüìç<b>–ò—Å–∫–∞—Ç–µ–ª—å: </b><a href = "https://t.me/{callback.from_user.username}">{result['name_user']}</a>\nüìç<b>–ñ–µ–ª–∞–µ–º–∞—è —Ü–µ–Ω–∞: </b>{result['praice']}\nüìç<b>–û–ø–∏—Å–∞–Ω–∏–µ: </b>{result['description']}''',
                    parse_mode = 'HTML')
                    ]
    await bot.send_media_group(chat_id = -1002185953665, media = media_list, reply_to_message_id = 21)
    await state.clear()

    await callback.message.answer('–í–∞—à–µ –æ–±—å—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ‚úÖ')

@router_callback.callback_query(F.data == 'no_post_pull')
async def proverka_pod(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.delete()
